# START SNIPPET: seleniumpropbasic
unitils.modules = [... other modules ...], webDiver

unitils.module.webDriver.className=org.unitils.selenium.WebDriverModule
unitils.module.webDriver.runAfter=
unitils.module.webDriver.enabled=true
org.unitils.selenium.browser.name=FIREFOX 
org.unitils.selenium.baseUrl= ???
# optional values: This is only needed when you want to download a file with Selenium.
org.unitils.selenium.downloadpath = ??? # (f.e.: C:\\Temp)
org.unitils.selenium.filetype= ???
# END SNIPPET: seleniumpropbasic


# START SNIPPET: seleniumpropdrivers
org.unitils.selenium.firefoxbinary= ? #location of the firefox driver
org.unitils.selenium.chromedriver= ? #location of the chrome driver
org.unitils.selenium.iebinary= ? #location of the ie driver
# END SNIPPET: seleniumpropdrivers

# START SNIPPET: seleniumpropchromebinary
org.unitils.selenium.chromebinary = #location of the exe.
# END SNIPPET: seleniumpropchromebinary

# START SNIPPET: seleniumproplogging
org.unitils.selenium.logging.console.enabled=true #prints the console output after a test and before the @After method begins
org.unitils.selenium.logging.performance= ? #default: OFF
org.unitils.selenium.logging.browser= ? #default: OFF
org.unitils.selenium.logging.client= ? #default: OFF
org.unitils.selenium.logging.driver= ? #default: OFF
org.unitils.selenium.logging.profiler= ? #default: OFF
org.unitils.selenium.logging.server= ? #default: OFF
org.unitils.selenium.logging.file= ? #The output can also be printed in a file, if you give the location of the file.
# END SNIPPET: seleniumproplogging


# START SNIPPET: seleniumpropdownloadbasic
org.unitils.selenium.downloadpath = ??? # (f.e.: C:\\Temp)
org.unitils.selenium.filetype= ???
# END SNIPPET: seleniumpropdownloadbasic

# START SNIPPET: seleniumpropdownloadRobotDownloader
org.unitils.selenium.downloader.RobotDownloader = ????
# END SNIPPET: seleniumpropdownloadRobotDownloader